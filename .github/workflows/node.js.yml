name: delopy and push to S3

on:
  workflow_dispatch:
  push:
    branches: ["master", "develop"]

jobs:
  BuildAndDeploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          cache: npm
      
      - name: Caching Gatsby
        id: gatsby-cache-build
        uses: actions/cache@v2
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      - name: npm install
        run: |
          npm ci      
      
      - name: Create env file
        run: |
          touch .env.production
          echo DATA_SOURCE_BRANCH=master >> .env.production
          cat .env.production
      
      - name: gatsby build
        run: |
          # npm run build

      - name: Set Variable
        run: |
          echo "TIME_VERSION=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV        
          echo "REF_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV  
          echo "SHA_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ECHO Variable
        run: |
          echo "${{ env.REF_VERSION }}"
          echo "${{ env.SHA_VERSION }}"      

      - name: Develop - Delopy to S3
        if: ${{ env.REF_VERSION == 'develop' }}
        run: |
          aws s3 cp public s3://${{ secrets.AWS_S3_BUCKET_DEVELOP }} --recursive
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID_DEVELOP }} --paths "/*"

      - name: Master - Delopy to S3
        if: ${{ env.REF_VERSION == 'master' }}
        run: |
          aws s3 cp public s3://${{ secrets.AWS_S3_BUCKET_MASTER }} --recursive
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID_MASTER }} --paths "/*"      

      - name: Master - Action zip
        uses: papeloto/action-zip@v1
        if: ${{ env.REF_VERSION == 'master' }}
        with:
          files: src/ static/ .ebextensions .npmrc .gatsby-browser.js gatsby-config.js gatsby-ssr.js package.json package-lock.json
          recursive: false
          dest: output/${{ env.SHA_VERSION }}.zip

      - name: Master - Delopy zip to S3 and elasticbeanstalk update
        if: ${{ env.REF_VERSION == 'master' }}
        run: |
          aws s3 cp output s3://${{ secrets.AWS_S3_BUCKET_PREVIEW }} --recursive
          aws elasticbeanstalk create-application-version --application-name jimmy-preview --version-label ${{ env.SHA_VERSION }} --source-bundle S3Bucket="${{ secrets.AWS_S3_BUCKET_PREVIEW }}",S3Key="${{ env.SHA_VERSION }}.zip"
          aws elasticbeanstalk update-environment --application-name jimmy-preview --environment-name Jimmypreview-env --version-label ${{ env.SHA_VERSION }}
